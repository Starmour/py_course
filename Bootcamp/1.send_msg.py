# –ü–æ–¥–∫–ª—é—á–∞–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É
import atexit
import os
from datetime import datetime

import requests
import speech_recognition
import telebot
from PIL import ImageEnhance, Image
from bs4 import BeautifulSoup
from keyboa import Keyboa
from openpyxl.workbook import Workbook
from pydub import AudioSegment
from telebot import types

print("Processing...")
# –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–∫–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –¥–∞–ª BotFather –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
# –ü—Ä–∏–º–µ—Ä: token = '2007628239:AAEF4ZVqLiRKG7j49EC4vaRwXjJ6DN6xng8'
token = '7921587804:AAF0_qyr0YyEqZKUw6SzHFtOWLbuxuRIHWw'  # <<< –í–∞—à —Ç–æ–∫–µ–Ω

# –í —ç—Ç–æ–π —Å—Ç—Ä–æ—á–∫–µ –º—ã –∑–∞–≤–æ–¥–∏–º –±–æ—Ç–∞ –∏ –¥–∞–µ–º –µ–º—É –∑–∞–ø–æ–º–Ω–∏—Ç—å —Ç–æ–∫–µ–Ω
bot = telebot.TeleBot(token)
work_book = Workbook()
work_sheet = work_book.active


# –ü–∏—à–µ–º –ø–µ—Ä–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–≤–µ—á–∞–µ—Ç "–ü—Ä–∏–≤–µ—Ç" –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
# –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—â–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –¢–ì —Å–ø—Ä—è—Ç–∞–Ω—ã –≤ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–¥ @

def log_2_xlsx(message):
    user_id = message.from_user.id
    user_name = str(message.from_user.first_name)
    user_surname = str(message.from_user.last_name)
    date_of_msg = datetime.fromtimestamp(message.date).strftime("%d.%m.%Y")
    time_of_msg = datetime.fromtimestamp(message.date).strftime("%H:%M:%S")
    msg_txt = message.text
    row = [user_id, date_of_msg, time_of_msg, user_name + " " + user_surname, msg_txt]
    work_sheet.append(row)
    work_book.save('log_list.xlsx')


def logging(message):
    user_id = message.from_user.id
    user_name = message.from_user.first_name
    user_surname = message.from_user.last_name
    time_of_msg = datetime.fromtimestamp(message.date).strftime("%d.%m.%Y %H:%M:%S")
    msg_txt = message.text

    bot.send_message(988170385,
                     f"ID: {user_id}\nName: {user_name} {user_surname}\nText:\"{msg_txt}\"\nTime: {time_of_msg}")


@bot.message_handler(commands=['start'])
def say_hi(message):
    log_2_xlsx(message)
    sticker = open('stickers/welcome_bender.tgs', 'rb')
    bot.send_sticker(message.chat.id, sticker)
    welcome_name = f'{message.from_user.first_name} {message.from_user.last_name}'
    welcome_msg = f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {welcome_name}!\n–ú–µ–Ω—è –∑–æ–≤—É—Ç TestBot –∏ —è –≥–æ—Ç–æ–≤ –ø—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –í–∞–º —Å–≤–æ–∏ –±–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.\n–í—ã–±–µ—Ä–µ—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –í–∞—Å —Ä–∞–∑–¥–µ–ª üëá'

    kb_markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)

    kb_welcome = types.KeyboardButton("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ")
    kb_img = types.KeyboardButton("üñºÔ∏è–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
    kb_voice = types.KeyboardButton("üéô–ü–µ—Ä–µ–≤–æ–¥ –≥–æ–ª–æ—Å–∞ –≤ —Ç–µ–∫—Å—Ç")
    kb_parser = types.KeyboardButton('üî®Html-parser')
    kb_openai = types.KeyboardButton("üî®OpenAI")
    kb_articles = types.KeyboardButton("üì∞–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Ç–∞—Ç—å–∏")

    kb_markup.add(kb_welcome).row(kb_img, kb_voice).row(kb_parser, kb_openai).add(kb_articles)

    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫
    bot.send_message(message.from_user.id, welcome_msg.format(message.from_user), parse_mode='html',
                     reply_markup=kb_markup)

    # INLINE BUTTONS IN MESSAGE
    # items = [["–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ"], ["üñºÔ∏è–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π", "üéô–ü–µ—Ä–µ–≤–æ–¥ –≥–æ–ª–æ—Å–∞ –≤ —Ç–µ–∫—Å—Ç"], ["üî®Html-parser", "OpenAI"]]
    # kb = Keyboa(items).keyboard
    # bot.send_message(message.from_user.id, welcome_msg.format(message.from_user), parse_mode='html',
    #                  reply_markup=kb)


@bot.message_handler(content_types=["text"])
def welcome(message):
    if message.text == "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ":
        say_hi(message)
    if message.text == "üñºÔ∏è–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π":
        log_2_xlsx(message)
        txt = open('show_scripts/reformatting_images.txt', 'rb')
        bot.send_message(message.chat.id, "–Ø –º–æ–≥—É –∏–∑–º–µ–Ω—è—Ç—å –í–∞—à–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.\n"
                                          "–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é –ª–∏—à—å —Ñ—É–Ω–∫—Ü–∏—é –∑–∞—Ç–µ–º–Ω–µ–Ω–∏—è.\n"
                                          "–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –µ–π –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –í–∞—à—É –∫–∞—Ä—Ç–∏–Ω–∫—É –∏ —è –≤–µ—Ä–Ω—É –í–∞–º –µ–µ —á–µ—Ä–µ–∑ –ø–∞—Ä—É —Å–µ–∫—É–Ω–¥.\n"
                                          "–ü—Ä–∏–ª–∞–≥–∞—é —Å–∫—Ä–∏–ø—Ç –∫–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–º —è –ø–æ–ª—å–∑—É—é—Å—å –¥–ª—è –¥–∞–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏")
        bot.send_document(message.chat.id, txt)

    # ToDo:
    if message.text == "üéô–ü–µ—Ä–µ–≤–æ–¥ –≥–æ–ª–æ—Å–∞ –≤ —Ç–µ–∫—Å—Ç":
        log_2_xlsx(message)
        txt = open('show_scripts/audio_transcription.txt', 'rb')
        bot.send_message(message.chat.id,
                         "–Ø —É–º–µ—é —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤—ã–≤–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n"
                         "–í–≤–∏–¥—É —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π, –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞ 25 —Å–µ–∫—É–Ω–¥–∞–º–∏, –Ω–æ —è —Ä–∞–±–æ—Ç–∞—é –Ω–∞–¥ —ç—Ç–∏–º –∏ —Å–æ–≤c–µ–º —Å–∫–æ—Ä–æ –≤—ã —Å–º–æ–∂–µ—Ç–µ –±–æ–ª—Ç–∞—Ç—å —á–∞—Å–∞–º–∏, –∞ —è –í–∞–º –≤—Å–µ —Ä–∞—Å—à–∏—Ñ—Ä—É—é.\n"
                         "–ö—Å—Ç–∞—Ç–∏, –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –í–∞—à—É —Ä–µ—á—å –≤ —Ç–µ–∫—Å—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –º–Ω–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µüéô –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ –∏ —è –º–∏–≥–æ–º –æ—Ç–ø—Ä–∞–≤–ª—é –í–∞–º –µ–≥–æ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫—É.")
        bot.send_document(message.chat.id, txt)
    # ToDo:
    if message.text == "üî®Html-parser":
        bot.send_message(message.chat.id,
                         "üî®–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n\n–ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–∞–π—Ç–∞")
        get_articles(message)

    # ToDo:
    if message.text == "üî®OpenAI":
        log_2_xlsx(message)
        bot.send_message(message.chat.id,
                         "üî®–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n\n–ó–¥–µ—Å—å –±—É–¥–µ—Ç –ø—Ä–∏–º–µ–Ω—è—Ç—å—Å—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ OpenAI")

    if message.text == "üì∞–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Ç–∞—Ç—å–∏":
        log_2_xlsx(message)
        bot.send_message(message.from_user.id, "–ü–æ–ª–µ–∑–Ω–∞—è —Å—Ç–∞—Ç—å—è –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –±–æ—Ç–∞\n"
                                               "https://surik00.gitbooks.io/aiogram-lessons/content/chapter5.html")
        bot.send_message(message.from_user.id, "–ü–æ–ª–µ–∑–Ω–∞—è —Å—Ç–∞—Ç—å—è –ø–æ —Ä–∞–±–æ—Ç–µ —Å Json-—Ñ–∞–π–ª–∞–º–∏\n"
                                               "https://pythonist.ru/chtenie-i-zapis-v-fajl-json-obekta/")


def transform_image(filename, brightness):
    # –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    source_image = Image.open(filename)
    enhancer = ImageEnhance.Brightness(source_image)
    # to reduce brightness by 50%, use factor 0.5
    source_image = enhancer.enhance(brightness / 100)
    source_image.save(filename)
    return filename


@bot.message_handler(content_types=['photo'])
def resend_photo(message):
    log_2_xlsx(message)
    bot.send_message(message.from_user.id, "–ó–∞—Ç–µ–º–Ω–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...")

    # –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    file_id = message.photo[-1].file_id
    filename = download_file(bot, file_id)
    transform_image(filename, 50)
    # –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ

    image = open(filename, 'rb')
    bot.send_photo(message.chat.id, image)
    image.close()

    # –ù–µ –∑–∞–±—ã–≤–∞–µ–º —É–¥–∞–ª—è—Ç—å –Ω–µ–Ω—É–∂–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    if os.path.exists(filename):
        os.remove(filename)


def oga2wav(filename):
    # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ —Ñ–∞–π–ª–æ–≤
    new_filename = filename.replace('.oga', '.wav')
    audio = AudioSegment.from_file(filename)
    audio.export(new_filename, format='wav')
    return new_filename


def recognize_speech(oga_filename):
    # –ü–µ—Ä–µ–≤–æ–¥ –≥–æ–ª–æ—Å–∞ –≤ —Ç–µ–∫—Å—Ç + —É–¥–∞–ª–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    wav_filename = oga2wav(oga_filename)
    recognizer = speech_recognition.Recognizer()

    with speech_recognition.WavFile(wav_filename) as source:
        wav_audio = recognizer.record(source)

    text = recognizer.recognize_google(wav_audio, language='ru')

    if os.path.exists(oga_filename):
        os.remove(oga_filename)

    if os.path.exists(wav_filename):
        os.remove(wav_filename)

    return text


def download_file(bot, file_id):
    # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏—Å–ª–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    file_info = bot.get_file(file_id)
    downloaded_file = bot.download_file(file_info.file_path)
    filename = file_id + file_info.file_path
    filename = filename.replace('/', '_')
    with open(filename, 'wb') as f:
        f.write(downloaded_file)
    return filename


@bot.message_handler(content_types=['voice'])
def transcript(message):
    log_2_xlsx(message)
    bot.send_message(message.from_user.id, "–ü–µ—Ä–µ–≤–æ–¥ –≥–æ–ª–æ—Å–∞ –≤ —Ç–µ–∫—Å—Ç...")
    # –§—É–Ω–∫—Ü–∏—è, –æ—Ç–ø—Ä–∞–≤–ª—è—é—â–∞—è —Ç–µ–∫—Å—Ç –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –≥–æ–ª–æ—Å–æ–≤–æ–µ
    try:

        filename = download_file(bot, message.voice.file_id)
        text = recognize_speech(filename)
        bot.send_message(message.chat.id, text)

    except speech_recognition.exceptions.UnknownValueError as e:
        print(e)
        bot.send_message(message.from_user.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ –º–æ–≥—É —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ç–µ–∫—Å—Ç üòî\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ üôè")


# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞. –û–Ω –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —è—á–µ–π–∫–∞ (–∫—Ä—É—Ç–∏—Ç—Å—è –∑–Ω–∞—á–æ–∫ —Å–ª–µ–≤–∞).
# –û—Å—Ç–∞–Ω–æ–≤–∏–º —è—á–µ–π–∫—É - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –±–æ—Ç
def get_articles(message):
    log_2_xlsx(message)
    web_page = requests.get('https://centersi.spb.ru/art/')
    soup = BeautifulSoup(web_page.text, 'html.parser')
    items = soup.find_all(class_='item')
    # INLINE BUTTONS IN MESSAGE
    articles = []
    ids = []
    for elem in items:
        title = elem.find(class_='item-name').text
        articles.append(title[:30])
        art_id = elem.attrs['id']
        ids.append(art_id)
    print(articles)
    kb = Keyboa(articles).keyboard
    bot.send_message(message.from_user.id, "–°—Ç–∞—Ç—å–∏ —Å —Å–∞–π—Ç–∞ https://centersi.spb.ru/art/", reply_markup=kb)


bot.polling()
